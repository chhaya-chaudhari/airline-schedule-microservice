{"version":3,"sources":["utils/Endpoints.js","services/HttpService.tsx","utils/FlightService.js","main/MapConfig.js","main/Map.js","main/Home.js","utils/lazyComponentLoad.js","App.js","reportWebVitals.js","index.js"],"names":["gatewayUrl","getAirportDetails","getHttp","obj","axios","get","url","headers","then","response","data","catch","error","console","formData","post","body","postHttp","code","endpointConstants","lat","lng","GoogleApiWrapper","apiKey","config","props","log","inputOption","useState","isShow","showingInfoWindow","activeMarker","state1","setState1","state2","setState2","state3","setState3","polyline","setPolyline","useEffect","connArrArpt","bomDetails","onwardDepArpt","onwardFltNo","onwardDepTime","jfkDetails","connFltNo","connArrTime","dxbDetails","connDepArpt","onwardArrTime","waitTime","connDepTime","google","zoom","initialCenter","streetViewControl","gestureHandling","mapTypeControl","fullscreenControl","center","position","onMouseover","marker","e","visible","Tooltip","title","placement","path","geodesic","options","strokeColor","strokeOpacity","strokeWeight","offset","icons","icon","FiberManualRecordIcon","repeat","columns","field","headerName","hide","width","SearchRequest","setData","rowData","setRowData","q","dataset","opts","setOpts","remoteUrl","loading1","setLoading1","loading2","handleClose","event","reason","prevState","onKeyPressInput","value","type","autocompleteSearch","qurl","indexOf","flightService","searchCode","dItems","map","ele","label","initialValues","from","to","onSubmit","departureAirport","arrivalAirport","fetchFlightData","row","dif","startTime","moment","endTime","diff","duration","hours","minutes","id","formik","Paper","style","padding","autoComplete","Grid","container","spacing","item","xs","className","InputLabel","Autocomplete","freeSolo","name","renderOption","option","Typography","variant","getOptionLabel","getOptionSelected","onChange","values","handleChange1","onInputChange","onClose","renderInput","params","TextField","margin","InputLabelProps","fontSize","fontStyle","color","CircularProgress","handleChange2","Button","height","rows","onRowClick","hideFooter","Map","lazyComponentLoad","mycomponent","state","component","cmp","setState","default","C","this","Component","App","Container","Home","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.834441d5.chunk.js","sourcesContent":["export const gatewayUrl= \"http://localhost:9090/\"\r\nexport const getFlightData =  gatewayUrl +'connection-builder-service/api/flight-connections';\r\nexport const getAirportDetails = gatewayUrl +'master-data-service/api/airports';\r\nexport const searchCode = getAirportDetails+'/search-codes';\r\n","import axios from \"axios\"\r\n\r\n\r\ninterface HttpParam {\r\n    url: string;\r\n    body?: string;\r\n}\r\n\r\nexport const postHttp = (obj: HttpParam) => {\r\n\r\n    let config = {\r\n        headers: {\r\n            \r\n        }\r\n    }\r\n\r\n    return axios.post(obj.url, obj.body, config)\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            console.error(error.response.data);\r\n            return error.response.data;\r\n        })\r\n}\r\n\r\nexport const putHttp = (obj: HttpParam) => {\r\n\r\n    let config = {\r\n        headers: {\r\n        }\r\n    }\r\n\r\n    return axios.put(obj.url, obj.body, config)\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            console.error(error.response.data);\r\n            return error.response.data;\r\n\r\n        })\r\n\r\n}\r\n\r\nexport const getHttp = (obj: HttpParam) => {\r\n\r\n    let config = {\r\n        headers: {\r\n        }\r\n    }\r\n\r\n    return axios.get(obj.url, config)\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            console.error(error.response);\r\n            return error.response;\r\n        })\r\n\r\n}\r\n\r\n\r\n","import * as endpointConstants from './Endpoints';\r\nimport { getHttp, postHttp } from '../services/HttpService';\r\n\r\nclass RequestService {\r\n\r\n    fetchFlightData(formData) {\r\n        const remoteUrl = endpointConstants.getFlightData;\r\n        let obj = {\r\n            url: remoteUrl,\r\n            body: formData\r\n        };\r\n        return postHttp(obj);\r\n    }\r\n\r\n    fetchAirportDetails(code) {\r\n        const remoteUrl = endpointConstants.getAirportDetails+\"/\"+code;\r\n        let obj = {\r\n            url: remoteUrl\r\n        };\r\n        return getHttp(obj);\r\n    }\r\n\r\n    searchCode(url) {\r\n        let obj = {\r\n            url: url\r\n        };\r\n        return getHttp(obj);\r\n    }\r\n\r\n}\r\nexport default new RequestService()","export default {\r\n  zoomLevel: 2.5,\r\n  apiKey: \"AIzaSyDEkxJNQFjBdFMzOueMCl1Qsk1RtPvAOvg\",\r\n  streetViewControl: false,\r\n  gestureHandling: \"auto\",\r\n  mapTypeControl: false,\r\n  fullscreenControl: false,\r\n  center: {\r\n    lat: 36.15752575135864,\r\n    lng: -0.9788087008131827,\r\n  },\r\n};","import { useEffect, useState } from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\r\nimport config from './MapConfig';\r\nimport { Polyline } from \"@react-google-maps/api\";\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport convert from 'geo-coordinates-parser';\r\nimport flightService from \"../utils/FlightService\";\r\n\r\nfunction MapComponent(props) {\r\n  console.log(\"map\", props.data)\r\n  console.log(\"map\", props.inputOption)\r\n  const [data] = useState(props.data);\r\n  const [show, isShow] = useState(false);\r\n  const [state1, setState1] = useState({\r\n    showingInfoWindow: false,\r\n    activeMarker: {},\r\n  });\r\n  const [state2, setState2] = useState({\r\n    showingInfoWindow: false,\r\n    activeMarker: {},\r\n  });\r\n  const [state3, setState3] = useState({\r\n    showingInfoWindow: false,\r\n    activeMarker: {},\r\n  });\r\n\r\n  const [polyline, setPolyline] = useState([\r\n    // { lat: 19.08861, lng: 72.86806 },\r\n    //       { lat: 25.25278, lng: 55.36444 },\r\n    //       { lat: 40.63972, lng: -73.77889 },\r\n  ]);\r\n  \r\n  useEffect(() => {\r\n    isShow(true);\r\n    if(props.data?.connArrArpt === 'JFK') {\r\n      setPolyline([\r\n        { lat: 19.08861, lng: 72.86806 },\r\n        { lat: 25.25278, lng: 55.36444 },\r\n        { lat: 40.63972, lng: -73.77889 },\r\n      ])\r\n    }\r\n    else if(props.data?.connArrArpt === 'IAH') {\r\n      setPolyline([\r\n        { lat: 19.08861, lng: 72.86806 },\r\n        { lat: 25.25278, lng: 55.36444 },\r\n        {lat:29.99020 , lng:-95.33707}\r\n      ]) \r\n  }\r\n  },[data, props]);\r\n\r\n  // useEffect(() => {\r\n  //   const latLng = [];\r\n  //   const bom = [];\r\n  //   if(props.data){\r\n  //   const codes = [props.data.onwardDepArpt, props.data.onwardArrArpt,props.data.connArrArpt]\r\n  //   codes.forEach(code => {\r\n  //     flightService.fetchAirportDetails(code)\r\n  //     .then(response => {\r\n  //       console.log(\"response\", response);\r\n  //       // response.map((row) => {\r\n  //         const converted = convert(response.coOrdinates);\r\n  //         response.lat = converted.decimalLatitude;\r\n  //         response.lng = converted.decimalLongitude;\r\n  //         bom.push(response);\r\n  //         setBom(bom);\r\n  //         latLng.push({\r\n  //           lat: converted.decimalLatitude,\r\n  //           lng: converted.decimalLongitude\r\n  //         })\r\n  //         setPolyline(latLng);\r\n  //       // })\r\n  //     });\r\n  //   })\r\n  // }\r\n  // }, [props.data])\r\n\r\n  let bomDetails = props.data ? ` City Name:` + props.data.onwardDepArpt + `\r\n  Flight No: ` + props.data.onwardFltNo + `\r\n  Flight Time: ` + props.data.onwardDepTime + ` (Dep Time)\r\n  Wait Time: \t-  ` : \"\";\r\n\r\n  let jfkDetails = props.data ? ` City Name:` + props.data.connArrArpt + `\r\n  Flight No: ` + props.data.connFltNo + `\r\n  Flight Time: ` + props.data.connArrTime + ` (Arr Time)\r\n  Wait Time: \t-  ` : \"\";\r\n\r\n  let dxbDetails = props.data ? `City Name:` + props.data.connDepArpt + `\r\n  Flight No: ` + props.data.onwardFltNo + `\r\n  Flight Time: ` + props.data.onwardArrTime + ` (Arr Time)\r\n  Wait  Time: ` + props.data.waitTime + `\r\n  Flight No: ` + props.data.connFltNo + `\r\n  Flight Time: ` + props.data.connDepTime + ` (Dep Time) ` : \"\";\r\n\r\n  const onMarkerClick1 = (props, marker, e) => {\r\n    setState1({\r\n      activeMarker: marker,\r\n      showingInfoWindow: true,\r\n    });\r\n  }\r\n\r\n  const onMarkerClick2 = (props, marker, e) => {\r\n    setState2({\r\n      activeMarker: marker,\r\n      showingInfoWindow: true,\r\n    });\r\n  }\r\n\r\n  const onMarkerClick3 = (props, marker, e) => {\r\n    setState3({\r\n      activeMarker: marker,\r\n      showingInfoWindow: true,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Map\r\n      google={props.google}\r\n      zoom={config.zoomLevel}\r\n      initialCenter={{ lat: config.center.lat, lng: config.center.lng }}\r\n      streetViewControl={config.streetViewControl}\r\n      gestureHandling={config.gestureHandling}\r\n      mapTypeControl={config.mapTypeControl}\r\n      fullscreenControl={config.fullscreenControl}\r\n      center={{ lat: config.center.lat, lng: config.center.lng }}\r\n    >\r\n       <Marker position={{ lat: 19.08861, lng: 72.86806 }} onMouseover={onMarkerClick1} />\r\n      <InfoWindow\r\n        marker={state1.activeMarker}\r\n        visible={state1.showingInfoWindow}\r\n      >\r\n        <Tooltip title={bomDetails} placement=\"bottom\">\r\n         <p>Mumbai BOM</p>\r\n        </Tooltip>\r\n      </InfoWindow>\r\n     <Marker position={{ lat: 25.25278, lng: 55.36444 }} onMouseover={onMarkerClick2} />\r\n      <InfoWindow\r\n        marker={state2.activeMarker}\r\n        visible={state2.showingInfoWindow}\r\n      >\r\n        <Tooltip title={dxbDetails} placement=\"top\">\r\n          <p>Dubai DXB</p>\r\n        </Tooltip>\r\n      </InfoWindow>\r\n      <Marker position={props.inputOption == 'IAH' ?  {lat:29.99020 , lng:-95.33707} :{ lat: 40.63972, lng: -73.77889 }} onMouseover={onMarkerClick3} />\r\n      <InfoWindow\r\n        marker={state3.activeMarker}\r\n        visible={state3.showingInfoWindow}\r\n      >\r\n        <Tooltip title={jfkDetails} placement=\"bottom\">\r\n       <p>{props.inputOption == 'IAH' ? 'Houston IAH' : 'New York JFK'}</p>\r\n        </Tooltip>\r\n      </InfoWindow>\r\n      <Polyline\r\n        path={polyline}\r\n        geodesic={true}\r\n        options={{\r\n          strokeColor: \"#d14\",\r\n          strokeOpacity: 1,\r\n          strokeWeight: 1.5,\r\n          offset: '0%',\r\n          icons: [\r\n            {\r\n              strokeWeight: 2,\r\n              icon: FiberManualRecordIcon,\r\n              offset: '0%',\r\n              repeat: '35px'\r\n            }\r\n          ]\r\n        }} />\r\n    </Map>\r\n  );\r\n}\r\n\r\nexport default GoogleApiWrapper({ apiKey: config.apiKey })(MapComponent);\r\n","import { Button, CircularProgress, Grid, InputLabel, Paper, TextField, Typography } from \"@material-ui/core\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { useState } from \"react\";\r\nimport flightService from \"../utils/FlightService\";\r\nimport MapComponent from \"../main/Map\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport * as endpointConstants from '../utils/Endpoints';\r\nimport moment from \"moment\";\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: 'Id', hide: true },\r\n    { field: 'onwardFltNo', headerName: 'Onward Flight', width: 130 },\r\n    { field: 'onwardDepArpt', headerName: 'Dep Airport', width: 130 },\r\n    { field: 'onwardArrArpt', headerName: 'Arrival Airport', width: 130 },\r\n    { field: 'onwardDepTime', headerName: 'Dep Time', width: 130 },\r\n    { field: 'onwardArrTime', headerName: 'Arrival Time', width: 130 },\r\n    { field: 'connFltNo', headerName: 'Connecting Flight', width: 130 },\r\n    { field: 'connDepArpt', headerName: 'Dep Airport', width: 130 },\r\n    { field: 'connArrArpt', headerName: 'Arrival Airport', width: 130 },\r\n    { field: 'connDepTime', headerName: 'Dep Time', width: 130 },\r\n    { field: 'connArrTime', headerName: 'Arrival Time', width: 130 },\r\n];\r\n\r\nexport default function SearchRequest() {\r\n    const [data, setData] = useState([]);\r\n    const [rowData, setRowData] = useState();\r\n    const [opts, setOpts] = useState({ q: '', dataset: [] });\r\n    const  remoteUrl = endpointConstants.searchCode;\r\n    const [loading1, setLoading1] = useState(false);\r\n    const [loading2, setLoading2] = useState(false);\r\n\r\n    const search = (e) => {\r\n        var formData = {\r\n            departureAirport: e.from,\r\n            arrivalAirport: e.to\r\n        }\r\n        flightService.fetchFlightData(formData)\r\n            .then(response => {\r\n                console.log(\"response\", response);\r\n                response.map((row) => {\r\n                    var startTime = moment(row.connDepTime, \"HH:mm:ss a\"),\r\n                     endTime = moment(row.onwardArrTime, \"HH:mm:ss a\");\r\n                     let dif;\r\n                     if(endTime > startTime){\r\n                        dif = startTime.diff(moment(\"00:00:00\", \"HH:mm:ss a\"));\r\n                        dif = dif + moment(\"24:00:00\", \"HH:mm:ss a\").diff(endTime);\r\n                        dif = moment.duration(dif);\r\n                        console.log('dif', dif.hours())\r\n                        row.waitTime = dif.hours()+ \"h \" + dif.minutes() + \"m\";\r\n                     }\r\n                   else {\r\n                    dif = moment.duration(startTime.diff(endTime));\r\n                    row.waitTime = dif.hours()+ \"h \" + dif.minutes() + \"m\";\r\n                   }\r\n                    row.id = row.onwardFltNo + row.connFltNo;\r\n                })\r\n                setData(response)\r\n            });\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (remoteUrl) {\r\n            setOpts((prevState) => ({\r\n                ...prevState,\r\n                dataset: []\r\n            }));\r\n        }\r\n        console.log('closing');\r\n    }\r\n\r\n    const onKeyPressInput = (event, value, reason) => {\r\n        if (event.type === 'click') {\r\n            return;\r\n        }\r\n\r\n        if (remoteUrl && value !== '') {\r\n            autocompleteSearch(value)\r\n            setOpts((prevState) => ({\r\n                ...prevState,\r\n                q: value,\r\n            }));\r\n        }\r\n    }\r\n\r\n    const autocompleteSearch = (value) => {\r\n        setLoading1(true);\r\n        let qurl;\r\n\r\n        if (remoteUrl.indexOf('?') === -1) {\r\n           qurl = remoteUrl + '?code=' + `${value}`;\r\n        } else {\r\n           qurl = remoteUrl + '&code=' + `${value}`;\r\n        }\r\n     \r\n        console.log(\"url::::\", qurl);\r\n        flightService.searchCode(qurl).then(e => {\r\n            let dItems = [];\r\n            console.log(e);\r\n            dItems = e.map((ele) => {\r\n                return { label: ele, value: ele }\r\n            });\r\n            console.log(dItems);\r\n            setOpts((prevState) => ({\r\n                ...prevState,\r\n                dataset: dItems\r\n            }));\r\n            setLoading1(false);\r\n\r\n        })\r\n    };\r\n\r\n    const handleChange1 = (event, option, formik) => {\r\n        formik.values.from = option?.value;\r\n    }\r\n\r\n    const handleChange2 = (event, option, formik) => {\r\n        formik.values.to = option?.value;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                from: \"\",\r\n                to: \"\"\r\n            }}\r\n            onSubmit={search}\r\n        >\r\n            {(formik) => {\r\n                return (\r\n                    <Paper style={{ padding: '30px' }}>\r\n                        <Form autoComplete=\"off\">\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={4} className=\"row\">\r\n                                    <InputLabel>From Airport : </InputLabel>\r\n                                </Grid>\r\n                                <Grid item xs={8} className=\"row\">\r\n                                   <Autocomplete\r\n                                    freeSolo\r\n                                    name=\"from\"\r\n                                    id=\"from\"\r\n                                    autoComplete={false}\r\n                                    options={opts.dataset}\r\n                                    renderOption={(option) => (\r\n                                        <Typography variant=\"p\">{option.label}</Typography>\r\n                                      )}\r\n                                    getOptionLabel={(option) => option.label}\r\n                                    getOptionSelected={(option, value) => {\r\n                                        return true;\r\n                                    }}\r\n                                    onChange={(event, option) => handleChange1(event, option, formik)}\r\n                                    onInputChange={onKeyPressInput}\r\n                                    onClose={handleClose}\r\n                                    renderInput={(params) => {\r\n                                        return (<>\r\n                                            <div className=\"autoSelect-txt-div\">\r\n                                                <TextField autoComplete=\"false\"   {...params} label={\"Search by Flight code\"}  variant=\"outlined\"\r\n                                                 margin=\"dense\"   InputLabelProps={{\r\n                                                    style:{\r\n                                                     fontSize: '16px', \r\n                                                     fontStyle: 'normal',\r\n                                                     color:'#5A5A5A'\r\n                                                    }\r\n                                                }}\r\n                                                   \r\n                                                />\r\n                                                {loading1 && <CircularProgress className=\"auto-search-loading-icon\" />}\r\n                                            </div>\r\n                                        </>)\r\n                                    }}\r\n                                />\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <InputLabel>To Airport : </InputLabel>\r\n                                </Grid>\r\n                                <Grid item xs={8}>\r\n                                    <Autocomplete\r\n                                    freeSolo\r\n                                    name=\"to\"\r\n                                    id=\"to\"\r\n                                    autoComplete={false}\r\n                                    options={opts.dataset}\r\n                                    renderOption={(option) => (\r\n                                        <Typography variant=\"p\">{option.label}</Typography>\r\n                                      )}\r\n                                    getOptionLabel={(option) => option.label}\r\n                                    getOptionSelected={(option, value) => {\r\n                                        return true;\r\n                                    }}\r\n                                    onChange={(event, option) => handleChange2(event, option, formik)}\r\n                                    onInputChange={onKeyPressInput}\r\n                                    onClose={handleClose}\r\n                                    renderInput={(params) => {\r\n                                        return (<>\r\n                                            <div className=\"autoSelect-txt-div\">\r\n                                                <TextField autoComplete=\"false\"   {...params} label={\"Search by Flight code\"}  variant=\"outlined\"\r\n                                                 margin=\"dense\"   InputLabelProps={{\r\n                                                    style:{\r\n                                                     fontSize: '16px', \r\n                                                     fontStyle: 'normal',\r\n                                                     color:'#5A5A5A'\r\n                                                    }\r\n                                                }}\r\n                                                   \r\n                                                />\r\n                                                {loading2 && <CircularProgress className=\"auto-search-loading-icon\" />}\r\n                                            </div>\r\n                                        </>)\r\n                                    }}\r\n                                />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                                        Search\r\n                        </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container style={{ height: 350, width: '100%', padding: '30px' }}>\r\n                                <DataGrid rows={data}\r\n                                    columns={columns}\r\n                                    onRowClick={e => {\r\n                                        console.log(e)\r\n                                        setRowData(e.row)\r\n                                    }}\r\n                                    hideFooter={true} />\r\n                            </Grid>\r\n                        </Form>\r\n                        <Grid container>\r\n                            <div style={{ width: \"200vh\", height: \"100vh\", position: 'relative' }}>\r\n                                <MapComponent\r\n                                    data={rowData}\r\n                                    inputOption={formik.values.to}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                    </Paper>\r\n\r\n                )\r\n            }}\r\n        </Formik>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nconst lazyComponentLoad = (mycomponent) => {\r\n    return class extends Component {\r\n        state = {\r\n            component: null\r\n        }\r\n\r\n        componentDidMount() {\r\n            mycomponent()\r\n                .then(cmp => {\r\n                    this.setState({ component: cmp.default });\r\n                });\r\n        }\r\n\r\n        render() {\r\n            const C = this.state.component;\r\n            return C ? <C {...this.props} /> : <></>;\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default lazyComponentLoad;\r\n","import './App.css';\nimport React, { useEffect } from 'react';\nimport { Container} from '@material-ui/core';\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\nimport lazyComponentLoad from './utils/lazyComponentLoad';\nimport './App.css';\nimport Home from './main/Home';\n\n\nconst homeAsync = lazyComponentLoad(() => {\n  return import('./main/Home');\n});\n\nfunction App() {\n\n  useEffect(() => {\n\n  }, [])\n  return (\n\n    <Router>\n      <div className=\"App\">\n          <Container>\n            <Home />\n            {/* <Switch>\n              <Route path=\"/home\" exact component={homeAsync} />\n            </Switch> */}\n          </Container >\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}